<div style="font-family:Verdana;font-size:19px;line-height:25px;text-align:justify;margin-left:40px;margin-right:40px;margin-top:20px;"><h1>UnitParser Web API</h1><br/><p>This API allows you to enjoy the main string parsing functionalities of <a href="https://customsolvers.com/unit_parser/" title="Main page of UnitParser .NET/C#" target="_blank">UnitParser</a>.</p><p>The following endpoints are available:</p><ul><li style="margin-top:-10px;margin-bottom:10px;"><a href="https://unitparser.azurewebsites.net/xml?input=your_input_here" title="XML endpoint" target="_blank">XML</a></li><li><a href="https://unitparser.azurewebsites.net/json?input=your_input_here" title="JSON endpoint" target="_blank">JSON</a></li></ul><p>The input strings have to meet the expectations of the corresponding UnitParser constructor <code>UnitP("string input")</code>. The best way to get a proper idea about the expected format and supported scenarios is taking a look at UnitParser's <a href="https://customsolvers.com/downloads/flexible_parser/unit_parser/UnitParser.pdf" title="UnitParser readme file" target="_blank">readme file</a>. In any case, these are the most common use cases:<ul><li style="margin-bottom:10px;margin-top:-10px;">Getting basic information about the given unit. Examples: <code>N</code>, <code>gallon</code>, <code>Gal</code>.</li><li style="margin-bottom:10px;">Simplifying units formed by various constituents. Examples: <code>1000g*m*second-3*s</code> (newtons), <code>m^2*kg/ampere2*s3</code> (ohms), <code>N*metres/s</code> (watts).</li><li style="margin-bottom:10px;">Performing a conversion between two units belonging to different systems. Examples: <code>m*m-1*ft</code> (feet to metres), <code>m3*litre/m^3</code> (litres to cubic metres), <code>horsepower*kW*hp-1</code> (kilowatts to horsepower).<br/>Bear in mind that these conversions are automatic corrections of intrinsically wrong scenarios (i.e., constituent units belonging to different systems). Better make sure that you fully understand the underlying rules before using this functionality.</li></ul></p><p>The generated outputs follow a key-value structure containing either the word "Error" or the main information associated with the resulting <code>UnitP</code> variable.</p></div>